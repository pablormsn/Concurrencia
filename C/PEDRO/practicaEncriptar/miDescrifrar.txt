#include<stdio.h>
#include<stdlib.h>

void decrypt(unsigned * v, unsigned * k){
    unsigned const delta=0x9e3779b9;
    unsigned sum = 0xC6EF3720;

    for (int i =0; i < 32; i++){
        v[1]-= ((v[0]<<4)+k[2])^(v[0]+sum)^((v[0]>>5)+k[3]);
        v[0]-= ((v[1]<<4)+k[0])^(v[1]+sum)^((v[1]>>5)+k[1]);

        sum = sum - delta;
    }
}
int main(int argc, char const *argv[])
{
    unsigned k[4]={128, 129, 130, 131}; 
    FILE *fichEnc, *fichDes;
    unsigned tam_file, tam_file_2_des;

    if(argc!=3){
        perror("Faltan argumentos");
        exit(-1);
    }

      ptr_entrada = fopen(argv[1], "rb");
    if(ptr_entrada == NULL){
        perror("No se puede leer el fichero de entrada.");
        exit(-1);
    }

    fichEnc = fopen(argv[2], "wb");
    if(fichDes == NULL){
        perror("fichero no se puede abrir");
        exit(-1);
    }
    printf("Archivos cargados correctamente");
    if((fread(&tam_file, sizeof(unsigned),1,fichEnc)==1)){
        tam_file_2_des = tam_file;
        if(tam_file%8!= 0) tam_file_2_des += 8 - tam_file%8 ;
        
        unsigned *buffer = malloc(tam_file_2_des);
        fread(buffer,tam_file_2_des,1,fichEnc);
        for(int i = 0; i < tam_file_2_des/sizeof(unsigned); i += 2){
            decrypt(&buffer[i],k);
        }
        fwrite(buffer,sizeof(char),tam_file,fichDes);

        free(buffer);
        fclose(fichDes);
        fclose(fichEnc);

    }
    return 0;
}
